monolog:
    handlers:
        prod-signaler:
            type: fingers_crossed
            action_level: ERROR
            passthru_level: NOTICE # this means that all message of level NOTICE or higher are always logged
            handler: main_syslog
            bubble: false # if we handle it, nothing else should
        main_syslog:
            type: syslog
            ident: stepup-ra
            facility: user
            formatter: surfnet_stepup.monolog.json_formatter

when@prod:
    monolog:
        handlers:
            main:
                type: fingers_crossed
                action_level: error
                handler: nested
                excluded_http_codes: [ 404, 405 ]
                buffer_size: 50 # How many messages should be saved? Prevent memory leaks
            nested:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug
            console:
                type: console
                process_psr_3_messages: false
                channels: [ "!event", "!doctrine" ]

when@dev:
    monolog:
        handlers:
            prod-signaler:
                type: fingers_crossed
                action_level: ERROR
                passthru_level: DEBUG # DEV setting: this means that all message of level DEBUG or higher are always logged
                handler: main_syslog
                bubble: true
            main_syslog:
                type: syslog
                ident: stepup-ra
                facility: user
                formatter: surfnet_stepup.monolog.json_formatter
            main_logfile:
                type: stream
                handler: logfile
                level: NOTICE
                path: "%kernel.logs_dir%/%kernel.environment%.log"

when@smoketest:
    monolog:
        handlers:
            main:
                type: fingers_crossed
                action_level: error
                handler: nested
                excluded_http_codes: [ 404, 405 ]
                channels: [ "!event" ]
            nested:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug


when@test:
    monolog:
        handlers:
            main:
                type: fingers_crossed
                action_level: error
                handler: nested
                excluded_http_codes: [ 404, 405 ]
                channels: [ "!event" ]
            nested:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug
