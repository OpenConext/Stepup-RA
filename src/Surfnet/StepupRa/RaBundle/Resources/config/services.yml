services:
    # Forms
    ra.form.type.anchor:
        class: Surfnet\StepupRa\RaBundle\Form\Type\AnchorType
        tags: [{ name: form.type, alias: anchor }]

    ra.form.type.start_vetting_procedure:
        class: Surfnet\StepupRa\RaBundle\Form\Type\StartVettingProcedureType
        tags: [{ name: form.type, alias: ra_start_vetting_procedure }]

    ra.form.type.prove_yubikey_possession:
        class: Surfnet\StepupRa\RaBundle\Form\Type\VerifyYubikeyPublicIdType
        tags: [{ name: form.type, alias: ra_verify_yubikey_public_id }]

    ra.form.type.verify_identity:
        class: Surfnet\StepupRa\RaBundle\Form\Type\VerifyIdentityType
        tags: [{ name: form.type, alias: ra_verify_identity }]

    ra.form.type.send_sms_challenge:
        class: Surfnet\StepupRa\RaBundle\Form\Type\SendSmsChallengeType
        tags: [{ name: form.type, alias: ra_send_sms_challenge }]

    ra.form.type.verify_sms_challenge:
        class: Surfnet\StepupRa\RaBundle\Form\Type\VerifyPhoneNumberType
        tags: [{ name: form.type, alias: ra_verify_phone_number }]

    ra.form.type.search_ra_second_factors:
        class: Surfnet\StepupRa\RaBundle\Form\Type\SearchRaSecondFactorsType
        tags: [{ name: form.type, alias: ra_search_ra_second_factors }]

    # Services
    ra.service.vetting:
        class: Surfnet\StepupRa\RaBundle\Service\VettingService
        arguments:
            - @ra.service.sms_second_factor
            - @ra.service.yubikey_second_factor
            - @ra.service.gssf
            - @surfnet_stepup_middleware_client.service.command
            - @ra.repository.vetting_procedure

    ra.service.yubikey:
        public: false
        class: Surfnet\StepupRa\RaBundle\Service\YubikeyService
        arguments:
            - @ra.guzzle.gateway_api
            - @logger

    ra.service.yubikey_second_factor:
        public: true
        class: Surfnet\StepupRa\RaBundle\Service\YubikeySecondFactorService
        arguments:
            - @ra.service.yubikey
            - @logger

    ra.service.sms:
        public: false
        class: Surfnet\StepupRa\RaBundle\Service\SmsService
        arguments:
            - @ra.guzzle.gateway_api
            - @logger

    ra.service.sms_second_factor:
        class: Surfnet\StepupRa\RaBundle\Service\SmsSecondFactorService
        arguments:
            - @ra.service.sms
            - @ra.sms_challenge_store
            - @translator
            - @surfnet_stepup_middleware_client.service.command
            - '' # Originator set in extension

    ra.sms_challenge_store:
        class: Surfnet\StepupRa\RaBundle\Service\SmsSecondFactor\SessionChallengeStore
        arguments:
            - @session
            - 'Surfnet/Ra/SecondFactor/Sms:challenge'

    ra.service.gssf:
        class: Surfnet\StepupRa\RaBundle\Service\GssfService
        arguments:
            - @ra.service.gssf.sessionbag

    ra.service.gssf.sessionbag:
        class: Symfony\Component\HttpFoundation\Session\Attribute\NamespacedAttributeBag
        factory: ['@session', 'getBag']
        arguments: ['ra.service.gssf']

    ra.service.gssf.namespaced_attribute_bag:
        public: false
        class: Symfony\Component\HttpFoundation\Session\Attribute\NamespacedAttributeBag
        arguments:
            - '__ra.service.gssf__'
            - '/'
        calls:
            - [setName, ['ra.service.gssf']]

    ra.guzzle.gateway_api:
        public: false
        class: GuzzleHttp\Client
        arguments:
            - {} # Set from the extension

    ra.service.identity:
        class: Surfnet\StepupRa\RaBundle\Service\IdentityService
        arguments:
            - @surfnet_stepup_middleware_client.identity.service.identity
            - @surfnet_stepup_middleware_client.service.command
            - @logger

    ra.service.second_factor:
        class: Surfnet\StepupRa\RaBundle\Service\SecondFactorService
        arguments:
            - @surfnet_stepup_middleware_client.identity.service.second_factor
            - @surfnet_stepup_middleware_client.service.command
            - @logger

    ra.service.ra_second_factor:
        class: Surfnet\StepupRa\RaBundle\Service\RaSecondFactorService
        arguments:
            - @surfnet_stepup_middleware_client.identity.service.ra_second_factor
            - @surfnet_stepup_middleware_client.service.command
            - @logger

    # Repositories
    ra.repository.vetting_procedure:
        class: Surfnet\StepupRa\RaBundle\Repository\SessionVettingProcedureRepository
        arguments:
            - @session
            - 'Surfnet/StepupRa/RaBundle/Repository/VettingProcedureRepository'

    # SAML login
    ra.security.authentication.provider:
        class: Surfnet\StepupRa\RaBundle\Security\Authentication\Provider\SamlProvider
        arguments:
            - @ra.service.identity
            - @surfnet_saml.saml.attribute_dictionary

    ra.security.authentication.listener:
        class: Surfnet\StepupRa\RaBundle\Security\Firewall\SamlListener
        arguments:
            - @service_container

    ra.security.authentication.saml:
        class: Surfnet\StepupRa\RaBundle\Security\Authentication\SamlInteractionProvider
        arguments:
            - @surfnet_saml.hosted.service_provider
            - @surfnet_saml.remote.idp
            - @surfnet_saml.http.redirect_binding
            - @surfnet_saml.http.post_binding
            - @ra.security.authentication.session_handler
            - @surfnet_stepup.service.loa_resolution
            - @ra.security.required_loa

    ra.security.required_loa:
        public: false
        class: Surfnet\StepupBundle\Value\Loa
        factory: [@surfnet_stepup.service.loa_resolution, getLoa]
        arguments: [%surfnet_stepup_ra.security.required_loa%]

    ra.security.authentication.session_handler:
        class: Surfnet\StepupRa\RaBundle\Security\Authentication\SessionHandler
        arguments:
            - @session
