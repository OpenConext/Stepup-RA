services:
    # Forms
    ra.form.type.anchor:
        class: Surfnet\StepupRa\RaBundle\Form\Type\AnchorType
        tags: [{ name: form.type, alias: anchor }]

    ra.form.type.start_vetting_procedure:
        class: Surfnet\StepupRa\RaBundle\Form\Type\StartVettingProcedureType
        tags: [{ name: form.type, alias: ra_start_vetting_procedure }]

    ra.form.type.prove_yubikey_possession:
        class: Surfnet\StepupRa\RaBundle\Form\Type\VerifyYubikeyPublicIdType
        tags: [{ name: form.type, alias: ra_verify_yubikey_public_id }]

    # Services
    ra.service.yubikey:
        public: false
        class: Surfnet\StepupRa\RaBundle\Service\YubikeyService
        arguments:
            - @ra.guzzle.gateway_api
            - @logger

    ra.service.yubikey_second_factor:
        public: true
        class: Surfnet\StepupRa\RaBundle\Service\YubikeySecondFactorService
        arguments:
            - @ra.service.yubikey
            - @logger

    ra.service.sms:
        public: false
        class: Surfnet\StepupRa\RaBundle\Service\SmsService
        arguments:
            - @ra.guzzle.gateway_api
            - @logger

    ra.guzzle.gateway_api:
        public: false
        class: GuzzleHttp\Client
        arguments:
            - {} # Set from the extension

    ra.service.identity:
        class: Surfnet\StepupRa\RaBundle\Service\IdentityService
        arguments:
            - @surfnet_stepup_middleware_client.identity.service.identity
            - @surfnet_stepup_middleware_client.service.command
            - @logger

    ra.service.second_factor:
        class: Surfnet\StepupRa\RaBundle\Service\SecondFactorService
        arguments:
            - @surfnet_stepup_middleware_client.identity.service.second_factor
            - @surfnet_stepup_middleware_client.service.command
            - @logger

    # Repositories
    ra.repository.vetting_procedure:
        class: Surfnet\StepupRa\RaBundle\Repository\SessionVettingProcedureRepository
        arguments:
            - @session
            - 'Surfnet/StepupRa/RaBundle/Repository/VettingProcedureRepository'

    # SAML login
    ra.security.authentication.provider:
        class: Surfnet\StepupRa\RaBundle\Security\Authentication\Provider\SamlProvider
        arguments:
            - @ra.service.identity
            - @surfnet_saml.saml.attribute_dictionary

    ra.security.authentication.listener:
        class: Surfnet\StepupRa\RaBundle\Security\Firewall\SamlListener
        arguments:
            - @security.context
            - @security.authentication.manager
            - @ra.security.authentication.saml
            - @ra.security.authentication.session_handler
            - @logger

    ra.security.authentication.saml:
        public: false
        class: Surfnet\StepupRa\RaBundle\Security\Authentication\SamlInteractionProvider
        arguments:
            - @surfnet_saml.hosted.service_provider
            - @surfnet_saml.remote.idp
            - @surfnet_saml.http.redirect_binding
            - @surfnet_saml.http.post_binding
            - @ra.security.authentication.session_handler

    ra.security.authentication.session_handler:
        public: false
        class: Surfnet\StepupRa\RaBundle\Security\Authentication\SessionHandler
        arguments:
            - @session

    # Param converters
    ra.request.vetting_procedure_param_converter:
        class: Surfnet\StepupRa\RaBundle\Request\VettingProcedureParamConverter
        arguments: [ @ra.repository.vetting_procedure ]
        tags:
            - { name: request.param_converter, priority: -10, converter: ra.vetting_procedure }
